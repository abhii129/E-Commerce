import{B as a}from"./chunk-BaseElement-CopzcQ-j.js";import{t as g}from"./chunk-custom-element-BhZVzxrc.js";import{n as h}from"./chunk-property-Bc0RexEQ.js";import{e as p}from"./chunk-query-Cgxy6PDT.js";import"./chunk-lit-element-B04JoW0t.js";import"./chunk-base-CShCMygk.js";var d=Object.defineProperty,m=Object.getOwnPropertyDescriptor,s=(t,o,n,r)=>{for(var e=r>1?void 0:r?m(o,n):o,l=t.length-1,c;l>=0;l--)(c=t[l])&&(e=(r?c(o,n,e):c(e))||e);return r&&e&&d(o,n,e),e};let i=class extends a{constructor(){super(...arguments),this.isOpen=!1}connectedCallback(){super.connectedCallback(),this.toggleColorPicker=this.toggleColorPicker.bind(this),this.addEventListener("click",t=>{this.toggleColorPicker(t)})}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("click",t=>{this.toggleColorPicker(t)})}toggleColorPicker(t){const o=t.target;this.isOpen&&!this.toggle.contains(o)||(this.isOpen=!this.isOpen,this.isOpen?this.content.removeAttribute("hidden"):this.content.setAttribute("hidden","true"),this.toggle.setAttribute("aria-expanded",this.isOpen.toString()),this.toggle.setAttribute("aria-label",this.isOpen?window.strings.psn.collapse_item_colors:window.strings.psn.expand_item_colors))}};s([p("[data-toggle]")],i.prototype,"toggle",2);s([p("[data-content]")],i.prototype,"content",2);s([h({type:Boolean,reflect:!0,attribute:"is-open",converter:t=>t==="true"})],i.prototype,"isOpen",2);i=s([g("psn-item-color-picker")],i);
